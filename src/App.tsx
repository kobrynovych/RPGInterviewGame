import React, { useState, useEffect, ReactNode } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import useSound from 'use-sound';
import Confetti from 'react-confetti';
import { Wand2, Sword, Trophy, XCircle, Coffee, Sparkles, Zap, Heart, Star, Flame, Brain, Lightbulb, Rocket, Magnet as Magic } from 'lucide-react';

// Using direct URLs for sounds from a CDN
// const clickSfx = 'https://assets.mixkit.co/active_storage/sfx/2571/2571-preview.mp3';
// const winSfx = 'https://assets.mixkit.co/active_storage/sfx/1435/1435-preview.mp3';
// const failSfx = 'https://assets.mixkit.co/active_storage/sfx/2658/2658-preview.mp3';

import clickSfx from './sounds/click.mp3';
import winSfx from './sounds/win.mp3';
import failSfx from './sounds/fail.mp3';

// Type definitions
interface QuestionOption {
  question: string;
  options: string[];
  correct: number;
  explanation: string;
  effect: ReactNode;
}

interface Hero {
  id: string;
  name: string;
  icon: ReactNode;
  description: string;
  color: string;
  questions: QuestionOption[];
  background: string;
  powerIcon: ReactNode;
  powerName: string;
}

interface Ending {
  text: string;
  icon: ReactNode;
  description: string;
}

interface Endings {
  good: Ending;
  bad: Ending;
  neutral: Ending;
}

type EndingType = keyof Endings | "";

// const questions = [
//   {
//     question: "–ü–æ—è—Å–Ω–∏ hoisting –≤ JS –∫–æ—Ç–∏–∫—É üê±",
//     options: [
//       "–ú—É—Ä-–º—É—Ä, –∑–º—ñ–Ω–Ω—ñ —è–∫ –∫–æ—Ç–∏–∫–∏ ‚Äî —Å–ø–æ—á–∞—Ç–∫—É –ø—ñ–¥—Å—Ç—Ä–∏–±—É—é—Ç—å –≤–≥–æ—Ä—É —Ñ–∞–π–ª—É, –∞–ª–µ undefined, –ø–æ–∫–∏ —ó—Ö –Ω–µ –ø–æ–≥–ª–∞–¥–∏–ª–∏ (—ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞–ª–∏).",
//       "–¶–µ —è–∫ try-catch, —Ç—ñ–ª—å–∫–∏ –±–µ–∑ try —ñ –±–µ–∑ catch. –í–∑–∞–≥–∞–ª—ñ –Ω–µ –ø–∞–º‚Äô—è—Ç–∞—é.",
//       "–ö–æ—Ç–∏ –Ω–µ —Å–ª—É—Ö–∞—é—Ç—å –ø–æ—è—Å–Ω–µ–Ω–Ω—è. –í–æ–Ω–∏ —Å–∞–º—ñ —Å–µ–±–µ —Ö–æ—Å—Ç—è—Ç—å."
//     ],
//     correct: 0
//   },
//   {
//     question: "–£ –≤–∞—Å –¥–µ–¥–ª–∞–π–Ω –≤—á–æ—Ä–∞. useEffect –Ω–µ –ø—Ä–∞—Ü—é—î. –©–æ —Ä–æ–±–∏—à?",
//     options: [
//       "–°–ø–æ—á–∞—Ç–∫—É ‚Äî –≥–ª–∏–±–æ–∫–∏–π –≤–¥–∏—Ö. –ü–æ—Ç—ñ–º ‚Äî console.log —É—Å—å–æ–≥–æ, –≤–∫–ª—é—á–Ω–æ –∑ —Å–æ–≤—ñ—Å—Ç—é.",
//       "–ó–º—ñ–Ω—é—é –ø—Ä–æ—Ñ–µ—Å—ñ—é –Ω–∞ –±–∞—Ä–∏—Å—Ç—É. –¢–∞–º –º–µ–Ω—à–µ —Å—Ç—Ä–µ—Å—É.",
//       "–Ü–¥—É –≤ –ª—ñ—Å. useEffect –Ω–µ –ø—Ä–∞—Ü—é—î –≤ –ª—ñ—Å—ñ ‚Äî —Ü–µ –≤–∂–µ —Ç–æ—á–Ω–æ."
//     ],
//     correct: 0
//   },
//   {
//     question: "–ö–æ–ª–∏ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ !important?",
//     options: [
//       "–õ–∏—à–µ –≤ –∫—Ä–∞–π–Ω—ñ—Ö –≤–∏–ø–∞–¥–∫–∞—Ö. !important ‚Äî —è–∫ emergency-—á–∞–π: –Ω–µ –∑–ª–æ–≤–∂–∏–≤–∞—Ç–∏.",
//       "–°—Ç–∞–≤–ª—é !important –Ω–∞ –≤—Å–µ. –Ø–∫—â–æ –Ω–µ –ø—Ä–∞—Ü—é—î ‚Äî –¥–≤—ñ—á—ñ!",
//       "!important ‚Äî –º—ñ–π –Ω–∞–π–∫—Ä–∞—â–∏–π –¥—Ä—É–≥. –ú–∏ –Ω–∞–≤—ñ—Ç—å –∫–æ–¥ —Ä–∞–∑–æ–º –ø–∏—Å–∞–ª–∏."
//     ],
//     correct: 0
//   },
//   {
//     question: "–©–æ —Ç–∏ —Ä–æ–±–∏—à, —è–∫—â–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è?",
//     options: [
//       "–ü–µ—Ä–µ–≤—ñ—Ä—è—é –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ useEffect —Ç–∞ setState. –ó–∞–∑–≤–∏—á–∞–π —Ç–∞–º —Å–æ–±–∞–∫–∞ –∑–∞—Ä–∏—Ç–∞.",
//       "–ö—Ä–∏—á—É –Ω–∞ –º–æ–Ω—ñ—Ç–æ—Ä. –¶–µ –Ω–µ –¥–æ–ø–æ–º–∞–≥–∞—î, –∞–ª–µ –≤—ñ–¥—á—É–≤–∞—é —Å–µ–±–µ –∫—Ä–∞—â–µ.",
//       "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –≤—Å–µ —ñ —Å–ø–æ–¥—ñ–≤–∞—é—Å—è, —â–æ –ø—Ä–æ–∫–ª—è—Ç—Ç—è –∑–Ω—è—Ç–æ."
//     ],
//     correct: 0
//   },
//   {
//     question: "–Ø–∫–∞ —Ä—ñ–∑–Ω–∏—Ü—è –º—ñ–∂ null —ñ undefined?",
//     options: [
//       "undefined ‚Äî –∫–æ–ª–∏ –Ω–µ –≤–∏–∑–Ω–∞—á–∏–ª–∏, null ‚Äî –∫–æ–ª–∏ –Ω–∞–≤–º–∏—Å–Ω–æ –Ω—ñ—á–æ–≥–æ.",
//       "null ‚Äî —Ü–µ –∫–æ–ª–∏ –Ω—É–ª—å, –∞ undefined ‚Äî —Ü–µ –±–∞–≥.",
//       "–¶–µ –ø—Ä–æ—Å—Ç–æ —Ä—ñ–∑–Ω—ñ —Å–ø–æ—Å–æ–±–∏ JS —Å–∫–∞–∑–∞—Ç–∏: '—è –Ω–µ –∑–Ω–∞—é, —â–æ —Ç–∏ —Ö–æ—á–µ—à'."
//     ],
//     correct: 0
//   }
// ];

const reactQuestions: QuestionOption[] = [
  {
    question: "–ü–æ—è—Å–Ω–∏ useEffect –∫–æ—Ç–∏–∫—É üê±",
    options: [
      "–ú—É—Ä-–º—É—Ä, —Ü–µ —è–∫ –±—É–¥–∏–ª—å–Ω–∏–∫ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ - –ø—Ä–æ–∫–∏–¥–∞—î—Ç—å—Å—è –∫–æ–ª–∏ —â–æ—Å—å –∑–º—ñ–Ω—é—î—Ç—å—Å—è —ñ —Ä–æ–±–∏—Ç—å —Å–≤–æ—ó –∫–æ—Ç—è—á—ñ —Å–ø—Ä–∞–≤–∏",
      "–¶–µ –º–∞–≥—ñ—á–Ω–∞ –ø–∞–ª–∏—á–∫–∞, –º–∞—Ö–Ω—É–≤ - —ñ –≤—Å–µ –ø—Ä–∞—Ü—é—î. –ê–±–æ –Ω–µ –ø—Ä–∞—Ü—é—î...",
      "–ê —â–æ —Ç—É—Ç –ø–æ—è—Å–Ω—é–≤–∞—Ç–∏? –ö–ª–∞—Ü–∞—î—à useEffect —ñ –π–¥–µ—à –ø–∏—Ç–∏ –∫–∞–≤—É ‚òï"
    ],
    correct: 0,
    explanation: "useEffect - —Ü–µ —Ö—É–∫ –¥–ª—è –ø–æ–±—ñ—á–Ω–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤, —è–∫ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø–æ–¥—ñ—ó, –∑–∞–ø–∏—Ç–∏ –¥–æ API, –∞–±–æ –∑–º—ñ–Ω–∏ DOM. –í—ñ–Ω –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—ñ—Å–ª—è —Ä–µ–Ω–¥–µ—Ä—É.",
    effect: <Sparkles className="w-6 h-6 text-blue-500 animate-pulse" />
  },
  {
    question: "–©–æ —Ç–∞–∫–µ React.memo() —ñ –∫–æ–ª–∏ –π–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏? ü§î",
    options: [
      "–¶–µ —è–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ - –∑–±–µ—Ä—ñ–≥–∞—î –π–æ–≥–æ –≤–∏–≥–ª—è–¥, –ø–æ–∫–∏ –ø—Ä–æ–ø—Å–∏ –Ω–µ –∑–º—ñ–Ω—è—Ç—å—Å—è. –ï–∫–æ–Ω–æ–º–∏—Ç—å –Ω–µ—Ä–≤–∏ —ñ CPU",
      "–¶–µ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∞–º'—è—Ç–æ–≤—É–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—ñ–≤ –≤ React. –î—É–∂–µ –∫–æ—Ä–∏—Å–Ω–æ!",
      "Memo - —Ü–µ –∫–æ–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–∏—à–µ –º–µ–º—É–∞—Ä–∏ –ø—Ä–æ —Å–≤–æ—î –∂–∏—Ç—Ç—è"
    ],
    correct: 0,
    explanation: "React.memo() - —Ü–µ HOC –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó, —è–∫–∏–π –∑–∞–ø–æ–±—ñ–≥–∞—î –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, —è–∫—â–æ –π–æ–≥–æ –ø—Ä–æ–ø—Å–∏ –Ω–µ –∑–º—ñ–Ω–∏–ª–∏—Å—è.",
    effect: <Zap className="w-6 h-6 text-yellow-500 animate-bounce" />
  },
  {
    question: "useCallback vs useMemo: –≤ —á–æ–º—É —Ä—ñ–∑–Ω–∏—Ü—è? üéØ",
    options: [
      "useCallback –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ–π, useMemo –¥–ª—è –∑–Ω–∞—á–µ–Ω—å. –Ø–∫ –±–ª–∏–∑–Ω—é–∫–∏, –∞–ª–µ –æ–¥–∏–Ω –ª—é–±–∏—Ç—å –¥—ñ—ó, —ñ–Ω—à–∏–π - —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏",
      "–¶–µ –æ–¥–Ω–µ –π —Ç–µ —Å–∞–º–µ, –ø—Ä–æ—Å—Ç–æ React —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∏ –ª—é–±–ª—è—Ç—å —É—Å–∫–ª–∞–¥–Ω—é–≤–∞—Ç–∏ –∂–∏—Ç—Ç—è",
      "useCallback –¥–ª—è –∫–æ–ª–±–µ–∫—ñ–≤, useMemo –¥–ª—è –º–µ–º—ñ–≤. –û—á–µ–≤–∏–¥–Ω–æ –∂!"
    ],
    correct: 0,
    explanation: "useCallback –º–µ–º–æ—ñ–∑—É—î —Ñ—É–Ω–∫—Ü—ñ—ó, –∞ useMemo - –∑–Ω–∞—á–µ–Ω–Ω—è. –†—ñ–∑–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∑–∞–¥–∞—á –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó.",
    effect: <Heart className="w-6 h-6 text-red-500 animate-pulse" />
  },
  {
    question: "–©–æ —Ç–∞–∫–µ React Fiber? üï∏Ô∏è",
    options: [
      "–¶–µ —è–∫ –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è React - –∫–µ—Ä—É—î –≤—Å—ñ–º–∞ –ø—Ä–æ—Ü–µ—Å–∞–º–∏ —ñ –º–æ–∂–µ —ó—Ö –ø—Ä–∏–∑—É–ø–∏–Ω—è—Ç–∏. –Ø–∫ –±–∞—Ç—å–∫–∏, —è–∫—ñ –∫–∞–∂—É—Ç—å: '–ü–æ—á–µ–∫–∞–π —Ö–≤–∏–ª–∏–Ω–∫—É!'",
      "–¶–µ –¥—ñ—î—Ç–∞ –¥–ª—è –≤–∞–∂–∫–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ React",
      "Fiber - —Ü–µ –∫–æ–ª–∏ –∫–æ–¥ —Ç–∞–∫–∏–π –∑–∞–ø–ª—É—Ç–∞–Ω–∏–π, —â–æ —Å—Ç–∞–≤ —Å—Ö–æ–∂–∏–π –Ω–∞ –≤–æ–ª–æ–∫–Ω–∞"
    ],
    correct: 0,
    explanation: "React Fiber - –Ω–æ–≤–∏–π –º–µ—Ö–∞–Ω—ñ–∑–º —É–∑–≥–æ–¥–∂–µ–Ω–Ω—è, —â–æ –¥–æ–∑–≤–æ–ª—è—î –ø—Ä–∏–∑—É–ø–∏–Ω—è—Ç–∏ —ñ –≤—ñ–¥–Ω–æ–≤–ª—é–≤–∞—Ç–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–ª—è –∫—Ä–∞—â–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ.",
    effect: <Star className="w-6 h-6 text-purple-500 animate-spin" />
  },
  {
    question: "–Ø–∫ –ø—Ä–∞—Ü—é—î StrictMode –≤ React? üîç",
    options: [
      "–¶–µ —è–∫ —Å—É–≤–æ—Ä–∏–π –≤—á–∏—Ç–µ–ª—å - –∑–º—É—à—É—î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —Ä–æ–±–∏—Ç–∏ –¥–æ–º–∞—à–∫—É –¥–≤—ñ—á—ñ, —â–æ–± –∑–Ω–∞–π—Ç–∏ –ø–æ–º–∏–ª–∫–∏",
      "–ó–∞–±–æ—Ä–æ–Ω—è—î –ø–∏—Å–∞—Ç–∏ –ø–æ–≥–∞–Ω—ñ –∂–∞—Ä—Ç–∏ –≤ –∫–æ–º–µ–Ω—Ç–∞—Ä—è—Ö",
      "–¶–µ —Ä–µ–∂–∏–º, –¥–µ React —Å—Ç–∞—î –¥—É–∂–µ —Å–µ—Ä–π–æ–∑–Ω–∏–º —ñ –ø–µ—Ä–µ—Å—Ç–∞—î —Ä–æ–∑—É–º—ñ—Ç–∏ –∂–∞—Ä—Ç–∏"
    ],
    correct: 0,
    explanation: "StrictMode –¥–æ–ø–æ–º–∞–≥–∞—î –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ –±–∞–≥–∏, –Ω–∞–≤–º–∏—Å–Ω–æ –ø–æ–¥–≤–æ—é—é—á–∏ —Ä–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ —É —Ä–æ–∑—Ä–æ–±—Ü—ñ.",
    effect: <Flame className="w-6 h-6 text-orange-500 animate-pulse" />
  },
  {
    question: "–©–æ —Ä–æ–±–∏—Ç–∏, –∫–æ–ª–∏ useState –Ω–µ –æ–Ω–æ–≤–ª—é—î —Å—Ç–∞–Ω? ü§Ø",
    options: [
      "–°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏ –Ω–µ –∑–∞–±—É–≤ –¥—É–∂–∫–∏ –≤ setState, –ø–æ—Ç—ñ–º –º–µ–¥–∏—Ç—É–≤–∞—Ç–∏ –Ω–∞–¥ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—î—é React",
      "–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –ø–µ—Ä–µ–∫–æ–Ω–∞—Ç–∏ useState, —â–æ –≤—ñ–Ω –º–∞—î –∑–º—ñ–Ω–∏—Ç–∏—Å—è. –ú–æ–∂–ª–∏–≤–æ, –≤—ñ–Ω –ø—Ä–æ—Å—Ç–æ –≤—Ä–µ–¥–Ω–∏–π",
      "–û–≥–æ–ª–æ—Å–∏—Ç–∏ useState –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–º —ñ –Ω–∞–ø–∏—Å–∞—Ç–∏ —Å–≤—ñ–π –≤–ª–∞—Å–Ω–∏–π"
    ],
    correct: 0,
    explanation: "–ß–∞—Å—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—ñ –∞–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ —Å—Ç–∞–Ω—É. setState((prev) => ...) –¥–æ–ø–æ–º–æ–∂–µ!",
    effect: <Sparkles className="w-6 h-6 text-blue-500 animate-spin" />
  },
  {
    question: "–ù–∞–≤—ñ—â–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω key –≤ —Å–ø–∏—Å–∫–∞—Ö React? üîë",
    options: [
      "–¶–µ —è–∫ –±–µ–π–¥–∂–∏–∫ –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Å–ø–∏—Å–∫—É - React –º–æ–∂–µ —ó—Ö –≤–ø—ñ–∑–Ω–∞—Ç–∏ –≤ –Ω–∞—Ç–æ–≤–ø—ñ —ñ –Ω–µ –ø–ª—É—Ç–∞—Ç–∏",
      "–¶–µ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç, –ø—Ä–æ—Å—Ç–æ React –ª—é–±–∏—Ç—å –∫–ª—é—á—ñ",
      "Key –ø–æ—Ç—Ä—ñ–±–µ–Ω, —â–æ–± –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ —Å–µ–∫—Ä–µ—Ç–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó React"
    ],
    correct: 0,
    explanation: "Key –¥–æ–ø–æ–º–∞–≥–∞—î React –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ —Å–ø–∏—Å–∫–∏, –≤–∏–∑–Ω–∞—á–∞—é—á–∏, —è–∫—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑–º—ñ–Ω–∏–ª–∏—Å—è, –¥–æ–¥–∞–ª–∏—Å—è —á–∏ –≤–∏–¥–∞–ª–∏–ª–∏—Å—è.",
    effect: <Zap className="w-6 h-6 text-yellow-500 animate-bounce" />
  },
  {
    question: "–©–æ —Ç–∞–∫–µ React Portal? üö™",
    options: [
      "–¶–µ —è–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ - –¥–æ–∑–≤–æ–ª—è—î —ó–º –∑'—è–≤–ª—è—Ç–∏—Å—è –¥–µ –∑–∞–≤–≥–æ–¥–Ω–æ –≤ DOM, —è–∫ —Å–ø—Ä–∞–≤–∂–Ω—è –º–∞–≥—ñ—è!",
      "–¶–µ –ø–æ—Ä—Ç–∞–ª –≤ —ñ–Ω—à–∏–π –≤–∏–º—ñ—Ä, –¥–µ –≤—Å—ñ –±–∞–≥–∏ —Å—Ç–∞—é—Ç—å —Ñ—ñ—á–∞–º–∏",
      "Portal - —Ü–µ –∫–æ–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—Ç–æ–º–∏–≤—Å—è —ñ –≤–∏—Ä—ñ—à–∏–≤ –ø–µ—Ä–µ—ó—Ö–∞—Ç–∏ –≤ —ñ–Ω—à–∏–π div"
    ],
    correct: 0,
    explanation: "Portal –¥–æ–∑–≤–æ–ª—è—î —Ä–µ–Ω–¥–µ—Ä–∏—Ç–∏ –¥–æ—á—ñ—Ä–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤ DOM-–≤—É–∑–æ–ª, —â–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ–∑–∞ —ñ—î—Ä–∞—Ä—Ö—ñ—î—é –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.",
    effect: <Star className="w-6 h-6 text-purple-500 animate-pulse" />
  },
  {
    question: "–Ø–∫ –ø—Ä–∞—Ü—é—î Virtual DOM? üå≥",
    options: [
      "–¶–µ —è–∫ —á–µ—Ä–Ω–µ—Ç–∫–∞ –¥–ª—è DOM - React —Å–ø–æ—á–∞—Ç–∫—É –º–∞–ª—é—î —Ç–∞–º, –∞ –ø–æ—Ç—ñ–º –ø–æ–∫–∞–∑—É—î —Ç—ñ–ª—å–∫–∏ —Ä—ñ–∑–Ω–∏—Ü—é. –ï–∫–æ–Ω–æ–º–Ω–æ!",
      "–¶–µ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∞ —Ä–µ–∞–ª—å–Ω—ñ—Å—Ç—å –¥–ª—è DOM –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, –¥–µ –≤–æ–Ω–∏ –≤—ñ–¥–ø–æ—á–∏–≤–∞—é—Ç—å",
      "Virtual DOM - —Ü–µ –∫–æ–ª–∏ DOM –ø—Ä–∞—Ü—é—î –≤—ñ–¥–¥–∞–ª–µ–Ω–æ –∑ –¥–æ–º—É"
    ],
    correct: 0,
    explanation: "Virtual DOM - —Ü–µ –ª–µ–≥–∫–∞ –∫–æ–ø—ñ—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ DOM, —è–∫–∞ –¥–æ–∑–≤–æ–ª—è—î React –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø–æ—Ä—ñ–≤–Ω—é–≤–∞—Ç–∏ —ñ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∑–º—ñ–Ω–µ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏.",
    effect: <Flame className="w-6 h-6 text-orange-500 animate-spin" />
  },
  {
    question: "–©–æ —Ç–∞–∫–µ React Context? üåç",
    options: [
      "–¶–µ —è–∫ –≥—Ä—É–ø–æ–≤–∞ —Ä–æ–∑—Å–∏–ª–∫–∞ –≤ —á–∞—Ç—ñ - –≤—Å—ñ –ø—ñ–¥–ø–∏—Å–∞–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è, –Ω–µ —Ç—Ä–µ–±–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —á–µ—Ä–µ–∑ –≤—Å—ñ—Ö",
      "Context - —Ü–µ –∫–æ–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –∑–±–∏—Ä–∞—é—Ç—å—Å—è —Ä–∞–∑–æ–º —ñ –ø–ª—ñ—Ç–∫—É—é—Ç—å",
      "–¶–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Å–µ–∫—Ä–µ—Ç—ñ–≤ React"
    ],
    correct: 0,
    explanation: "Context –Ω–∞–¥–∞—î —Å–ø–æ—Å—ñ–± –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –¥–∞–Ω—ñ —á–µ—Ä–µ–∑ –¥–µ—Ä–µ–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –±–µ–∑ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –ø—Ä–æ–ø—Å–∏ –≤—Ä—É—á–Ω—É –Ω–∞ –∫–æ–∂–Ω–æ–º—É —Ä—ñ–≤–Ω—ñ.",
    effect: <Heart className="w-6 h-6 text-red-500 animate-bounce" />
  }
];

const vueQuestions: QuestionOption[] = [
  {
    question: "–©–æ —Ç–∞–∫–µ Vue Reactivity System? üîÑ",
    options: [
      "–¶–µ —è–∫ —Ä–æ–∑—É–º–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫, —è–∫–∏–π —Å–ª—ñ–¥–∫—É—î –∑–∞ –≤–∞—à–∏–º–∏ –¥–∞–Ω–∏–º–∏ —ñ –æ–Ω–æ–≤–ª—é—î –≤—Å–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ. –ú–∞–≥—ñ—è Vue!",
      "–¶–µ —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Ä–µ–∞–∫—Ü—ñ—ó –Ω–∞ –ø–æ–≥–æ–¥—É —É Vue –¥–æ–¥–∞—Ç–∫–∞—Ö",
      "Reactivity - —Ü–µ –∫–æ–ª–∏ Vue —Ä–µ–∞–≥—É—î –Ω–∞ –≤–∞—à—ñ –ø–æ–º–∏–ª–∫–∏ —Å—É–º–Ω–∏–º —Å–º–∞–π–ª–∏–∫–æ–º"
    ],
    correct: 0,
    explanation: "Vue –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î Proxy –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω —É –¥–∞–Ω–∏—Ö —ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è DOM.",
    effect: <Sparkles className="w-6 h-6 text-green-500 animate-pulse" />
  },
  {
    question: "Composition API vs Options API: —â–æ –æ–±—Ä–∞—Ç–∏? ü§π",
    options: [
      "Composition API - —è–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä LEGO, –º–æ–∂–Ω–∞ –∑–±–∏—Ä–∞—Ç–∏ –ª–æ–≥—ñ–∫—É —è–∫ –∑–∞–≤–≥–æ–¥–Ω–æ. Options API - —è–∫ –≥–æ—Ç–æ–≤–∏–π –Ω–∞–±—ñ—Ä –º–µ–±–ª—ñ–≤ –∑ IKEA",
      "Options API, –±–æ –≤–æ–Ω–æ –º–∞—î –±—ñ–ª—å—à–µ –æ–ø—Ü—ñ–π. –û—á–µ–≤–∏–¥–Ω–æ –∂!",
      "Composition API –¥–ª—è –∫–æ–º–ø–æ–∑–∏—Ç–æ—Ä—ñ–≤, Options API –¥–ª—è –æ–ø—Ç–∏–º—ñ—Å—Ç—ñ–≤"
    ],
    correct: 0,
    explanation: "Composition API –ø—Ä–æ–ø–æ–Ω—É—î –±—ñ–ª—å—à–µ –≥–Ω—É—á–∫–æ—Å—Ç—ñ —Ç–∞ –∫—Ä–∞—â—É TypeScript –ø—ñ–¥—Ç—Ä–∏–º–∫—É, —Ç–æ–¥—ñ —è–∫ Options API –ø—Ä–æ—Å—Ç—ñ—à–µ –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤.",
    effect: <Zap className="w-6 h-6 text-emerald-500 animate-bounce" />
  },
  {
    question: "–©–æ —Ç–∞–∫–µ Vue Watchers? üëÄ",
    options: [
      "–¶–µ —è–∫ –æ—Ö–æ—Ä–æ–Ω—Ü—ñ –¥–∞–Ω–∏—Ö - —Å–ª—ñ–¥–∫—É—é—Ç—å –∑–∞ –∑–º—ñ–Ω–∞–º–∏ —ñ —Ä–æ–±–ª—è—Ç—å –≤—Å–µ, —â–æ –≤–∏ –Ω–∞–∫–∞–∂–µ—Ç–µ. –î—É–∂–µ —Å–ª—É—Ö–Ω—è–Ω—ñ!",
      "Watchers - —Ü–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –æ–∫—É–ª—è—Ä–∏ –¥–ª—è Vue —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤",
      "–¶–µ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á—ñ, —è–∫—ñ –¥–∏–≤–ª—è—Ç—å—Å—è —Å–µ—Ä—ñ–∞–ª–∏ —Ä–∞–∑–æ–º –∑ –≤–∞—à–∏–º –∫–æ–¥–æ–º"
    ],
    correct: 0,
    explanation: "Watchers –¥–æ–∑–≤–æ–ª—è—é—Ç—å —Ä–µ–∞–≥—É–≤–∞—Ç–∏ –Ω–∞ –∑–º—ñ–Ω–∏ –¥–∞–Ω–∏—Ö —ñ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ —Å–∫–ª–∞–¥–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∞–±–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ –¥—ñ—ó.",
    effect: <Star className="w-6 h-6 text-teal-500 animate-spin" />
  },
  {
    question: "–ù–∞–≤—ñ—â–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ Vue Directives? üìù",
    options: [
      "–¶–µ —è–∫ —á–∞—Ä—ñ–≤–Ω—ñ —Å–ª–æ–≤–∞ - –¥–æ–¥–∞—î—à v- —ñ HTML –ø–æ—á–∏–Ω–∞—î —Ä–æ–±–∏—Ç–∏ –∫—Ä—É—Ç—ñ —Ä–µ—á—ñ. –ê–±—Ä–∞–∫–∞–¥–∞–±—Ä–∞!",
      "–©–æ–± –¥–∞–≤–∞—Ç–∏ –≤–∫–∞–∑—ñ–≤–∫–∏ –º–æ–ª–æ–¥—à–∏–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞–º",
      "Directives - —Ü–µ –∫–æ–ª–∏ Vue –Ω–∞–º–∞–≥–∞—î—Ç—å—Å—è –±—É—Ç–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º"
    ],
    correct: 0,
    explanation: "Vue –¥–∏—Ä–µ–∫—Ç–∏–≤–∏ —Ä–æ–∑—à–∏—Ä—é—é—Ç—å –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ HTML –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, –¥–æ–¥–∞—é—á–∏ —Ä–µ–∞–∫—Ç–∏–≤–Ω—É –ø–æ–≤–µ–¥—ñ–Ω–∫—É —Ç–∞ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.",
    effect: <Flame className="w-6 h-6 text-lime-500 animate-pulse" />
  },
  {
    question: "–Ø–∫ –ø—Ä–∞—Ü—é—î v-model? üéÆ",
    options: [
      "–¶–µ —è–∫ —Ç–µ–ª–µ–ø–∞—Ç—ñ—è –º—ñ–∂ —Ñ–æ—Ä–º–æ—é —ñ –¥–∞–Ω–∏–º–∏ - –≤–æ–Ω–∏ –∑–∞–≤–∂–¥–∏ –∑–Ω–∞—é—Ç—å, —â–æ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –æ–¥–Ω–µ –∑ –æ–¥–Ω–∏–º",
      "v-model - —Ü–µ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∞ –º–æ–¥–µ–ª—å, —è–∫–∞ –¥–µ—Ñ—ñ–ª—é—î –ø–æ –≤–∞—à–æ–º—É –∫–æ–¥—É",
      "–¶–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π —Ä–µ–∂–∏–º –¥–ª—è v-–ø–æ–¥—ñ–±–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤"
    ],
    correct: 0,
    explanation: "v-model –∑–∞–±–µ–∑–ø–µ—á—É—î –¥–≤–æ—Å—Ç–æ—Ä–æ–Ω–Ω—î –∑–≤'—è–∑—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –º—ñ–∂ —Ñ–æ—Ä–º–∞–º–∏ —Ç–∞ —Å—Ç–∞–Ω–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.",
    effect: <Heart className="w-6 h-6 text-pink-500 animate-bounce" />
  },
  {
    question: "–©–æ —Ç–∞–∫–µ Vue Mixins? üé®",
    options: [
      "–¶–µ —è–∫ —Ä–µ—Ü–µ–ø—Ç–∏ - –¥–æ–¥–∞—î—Ç–µ –≥–æ—Ç–æ–≤—ñ —à–º–∞—Ç–æ—á–∫–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç. –°–º–∞—á–Ω–æ!",
      "Mixins - —Ü–µ –∫–æ–ª–∏ –∑–º—ñ—à—É—î—Ç–µ –≤—Å—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –≤ –±–ª–µ–Ω–¥–µ—Ä—ñ",
      "–¶–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –º—ñ–∫—Å–∏–Ω–∏ –¥–ª—è –≤–µ—á—ñ—Ä–∫–∏ Vue —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤"
    ],
    correct: 0,
    explanation: "Mixins –¥–æ–∑–≤–æ–ª—è—é—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –º—ñ–∂ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏, —Ö–æ—á–∞ –≤ Vue 3 –∫—Ä–∞—â–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é.",
    effect: <Sparkles className="w-6 h-6 text-violet-500 animate-spin" />
  },
  {
    question: "–ù–∞–≤—ñ—â–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω key –≤ v-for? üîë",
    options: [
      "–¶–µ —è–∫ –±—ñ—Ä–∫–∞ –Ω–∞ –æ–¥—è–∑—ñ - Vue –º–æ–∂–µ —à–≤–∏–¥–∫–æ –∑–Ω–∞–π—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç —ñ –Ω–µ –ø–ª—É—Ç–∞—Ç–∏ –π–æ–≥–æ –∑ —ñ–Ω—à–∏–º–∏",
      "key –ø–æ—Ç—Ä—ñ–±–µ–Ω, —â–æ–± –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ —Å–µ–∫—Ä–µ—Ç–Ω–µ –º–µ–Ω—é Vue",
      "–¶–µ –∫–ª—é—á –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–Ω–æ—ó –∫—ñ–º–Ω–∞—Ç–∏, –¥–µ –∂–∏–≤–µ Vue"
    ],
    correct: 0,
    explanation: "key –¥–æ–ø–æ–º–∞–≥–∞—î Vue –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ —Å–ø–∏—Å–∫–∏, –≤–∏–∑–Ω–∞—á–∞—é—á–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞.",
    effect: <Zap className="w-6 h-6 text-yellow-500 animate-pulse" />
  },
  {
    question: "–©–æ —Ç–∞–∫–µ Vue Slots? üé∞",
    options: [
      "–¶–µ —è–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç—É - –º–æ–∂–Ω–∞ –≤—Å—Ç–∞–≤–ª—è—Ç–∏ —â–æ –∑–∞–≤–≥–æ–¥–Ω–æ, —è–∫ –≤ —á–∞—Ä—ñ–≤–Ω—É —Å—É–º–∫—É!",
      "Slots - —Ü–µ —ñ–≥—Ä–æ–≤—ñ –∞–≤—Ç–æ–º–∞—Ç–∏ –≤ –∫–∞–∑–∏–Ω–æ Vue",
      "–¶–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —Å–ª–æ—Ç–∏ –¥–ª—è –ø–∞—Ä–∫—É–≤–∞–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤"
    ],
    correct: 0,
    explanation: "Slots –¥–æ–∑–≤–æ–ª—è—é—Ç—å —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –≥–Ω—É—á–∫—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏, —è–∫—ñ –º–æ–∂—É—Ç—å –ø—Ä–∏–π–º–∞—Ç–∏ —Ä—ñ–∑–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤—ñ–¥ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.",
    effect: <Star className="w-6 h-6 text-indigo-500 animate-bounce" />
  },
  {
    question: "–Ø–∫ –ø—Ä–∞—Ü—é—î Vue Router? üõ£Ô∏è",
    options: [
      "–¶–µ —è–∫ GPS –¥–ª—è –≤–∞—à–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É - –ø—Ä–æ–∫–ª–∞–¥–∞—î –º–∞—Ä—à—Ä—É—Ç–∏ –º—ñ–∂ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ —ñ –Ω–µ –¥–∞—î –∑–∞–±–ª—É–∫–∞—Ç–∏",
      "Router - —Ü–µ —Ä–æ–±–æ—Ç, —è–∫–∏–π —Ä–æ—É—Ç–∏—Ç—å –ø–∞–∫–µ—Ç–∏ –ø–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É",
      "–¶–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –ø—Ä–æ–ø—Å—ñ–≤"
    ],
    correct: 0,
    explanation: "Vue Router –∫–µ—Ä—É—î –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é —É Vue –¥–æ–¥–∞—Ç–∫–∞—Ö, –¥–æ–∑–≤–æ–ª—è—é—á–∏ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ SPA –∑ —Ä—ñ–∑–Ω–∏–º–∏ –º–∞—Ä—à—Ä—É—Ç–∞–º–∏ —Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏.",
    effect: <Flame className="w-6 h-6 text-orange-500 animate-spin" />
  },
  {
    question: "–©–æ —Ç–∞–∫–µ Vuex/Pinia? üè™",
    options: [
      "–¶–µ —è–∫ —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç –¥–ª—è —Å—Ç–∞–Ω—É –¥–æ–¥–∞—Ç–∫—É - –≤—Å—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –º–æ–∂—É—Ç—å –≤–∑—è—Ç–∏ —â–æ —Ç—Ä–µ–±–∞ –∑ –æ–¥–Ω–æ–≥–æ –º—ñ—Å—Ü—è",
      "–¶–µ –º—ñ—Å—Ü–µ, –¥–µ Vue –∑–±–µ—Ä—ñ–≥–∞—î —Å–≤–æ—ó —Å–µ–∫—Ä–µ—Ç–∏",
      "Vuex - —Ü–µ –∫–æ–ª–∏ Vue –≥—Ä–∞—î –≤ X —ñ O"
    ],
    correct: 0,
    explanation: "Vuex —ñ Pinia - —Ü–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∏ —Å—Ç–∞–Ω—É –¥–ª—è Vue, —è–∫—ñ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –∫–µ—Ä—É–≤–∞—Ç–∏ –¥–∞–Ω–∏–º–∏ –Ω–∞ —Ä—ñ–≤–Ω—ñ –≤—Å—å–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É.",
    effect: <Heart className="w-6 h-6 text-red-500 animate-pulse" />
  }
];

const heroes: Hero[] = [
  {
    id: "react-wizard",
    name: "React Wizard",
    icon: <Wand2 className="w-8 h-8" />,
    description: "–ú–∞–π—Å—Ç–µ—Ä —Ö—É–∫—ñ–≤ —Ç–∞ –∂–∏—Ç—Ç—î–≤–∏—Ö —Ü–∏–∫–ª—ñ–≤",
    color: "blue",
    questions: reactQuestions,
    background: "from-blue-50 to-purple-50",
    powerIcon: <Magic className="w-6 h-6 text-blue-500" />,
    powerName: "–•—É–∫-–∑–∞–∫–ª–∏–Ω–∞–Ω–Ω—è"
  },
  {
    id: "vue-ninja",
    name: "Vue Ninja",
    icon: <Sword className="w-8 h-8" />,
    description: "–ï–∫—Å–ø–µ—Ä—Ç –∑ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ç–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω–æ—ó –º–∞–≥—ñ—ó",
    color: "green",
    questions: vueQuestions,
    background: "from-green-50 to-emerald-50",
    powerIcon: <Rocket className="w-6 h-6 text-green-500" />,
    powerName: "–†–µ–∞–∫—Ç–∏–≤–Ω–∏–π —É–¥–∞—Ä"
  }
];

const endings: Endings = {
  good: {
    text: "‚ú® –†–µ–∫—Ä—É—Ç–µ—Ä: –í–∞—É! –¢–∏ –ø—Ä–æ—Å—Ç–æ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∏–π! –ì–æ—Ç—É–π —Ä–µ–∑—é–º–µ, –º–∏ —Ç–µ–±–µ –∑–∞–±–∏—Ä–∞—î–º–æ! –Ü —Ç–∞–∫, —Ç–≤–æ—ó –∂–∞—Ä—Ç–∏ —Ç–µ–∂ —Å–ø–æ–¥–æ–±–∞–ª–∏—Å—å! üåü",
    // text: "‚úÖ –†–µ–∫—Ä—É—Ç–µ—Ä: –ù–∞–º –≤—Å–µ —Å–ø–æ–¥–æ–±–∞–ª–æ—Å—å. –í—ñ—Ç–∞—î–º–æ, –æ—Ñ—Ñ–µ—Ä —Ç–≤—ñ–π! –Ü —â–µ –±–æ–Ω—É—Å –∑–∞ –≥—É–º–æ—Ä üòé",
    icon: <Trophy className="w-12 h-12 text-yellow-500 animate-bounce" />,
    description: "–¢–∏ –¥–æ–≤—ñ–≤, —â–æ –≤–æ–ª–æ–¥—ñ—î—à –Ω–µ —Ç—ñ–ª—å–∫–∏ –∑–Ω–∞–Ω–Ω—è–º–∏, –∞–ª–µ –π –ø–æ—á—É—Ç—Ç—è–º –≥—É–º–æ—Ä—É! –ü–æ–¥–≤—ñ–π–Ω–∞ –ø–µ—Ä–µ–º–æ–≥–∞! üéâ"
  },
  bad: {
    text: "üí´ –†–µ–∫—Ä—É—Ç–µ—Ä: –•–º... –ú–æ–∂–µ, —Å–ø—Ä–æ–±—É—î—à —Å—Ç–∞—Ç–∏ —Å—Ç–µ–Ω–¥–∞–ø-–∫–æ–º—ñ–∫–æ–º? –¢–≤–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±—É–ª–∏... –¥—É–∂–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–∏–º–∏! üòÖ",
    // text: "‚ùå –†–µ–∫—Ä—É—Ç–µ—Ä: –î—è–∫—É—î–º–æ –∑–∞ —á–∞—Å. –ê–ª–µ –º–∏ —à—É–∫–∞—î–º–æ –∫–æ–≥–æ—Å—å –∑... —ñ–Ω—à–∏–º –±–∞—á–µ–Ω–Ω—è–º.",
    icon: <XCircle className="w-12 h-12 text-red-500 animate-pulse" />,
    description: "–ù–µ –∑–∞—Å–º—É—á—É–π—Å—è! –ù–∞–≤—ñ—Ç—å –Ω–∞–π–∫—Ä–∞—â—ñ –≥–µ—Ä–æ—ó —ñ–Ω–æ–¥—ñ –ø—Ä–æ–º–∞—Ö—É—é—Ç—å—Å—è. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑! üéØ"
  },
  neutral: {
    text: "üé≠ –†–µ–∫—Ä—É—Ç–µ—Ä: –¶—ñ–∫–∞–≤–æ... –î—É–∂–µ —Ü—ñ–∫–∞–≤–æ... –ù–∞—Å—Ç—ñ–ª—å–∫–∏ —Ü—ñ–∫–∞–≤–æ, —â–æ –º–∏ –Ω–µ –∑–Ω–∞—î–º–æ, —á–∏ —Å–º—ñ—è—Ç–∏—Å—è —á–∏ –ø–ª–∞–∫–∞—Ç–∏! ü§î",
    // text: "ü§° –†–µ–∫—Ä—É—Ç–µ—Ä: –ú–∏ –≤–∞–º –ø–µ—Ä–µ–¥–∑–≤–æ–Ω–∏–º–æ. –Ø–∫—â–æ —â–æ—Å—å‚Ä¶ –∫–æ–ª–∏—Å—å‚Ä¶",
    icon: <Coffee className="w-12 h-12 text-brown-500 animate-spin" />,
    description: "–¢–∏ –¥–µ—Å—å –ø–æ—Å–µ—Ä–µ–¥–∏–Ω—ñ –º—ñ–∂ –¥–∂—É–Ω–æ–º —ñ —Å–µ–Ω—å–π–æ—Ä–æ–º. –ß–∞—Å –≤–∏–ø–∏—Ç–∏ –∫–∞–≤–∏ —ñ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏! ‚òï"
  }
};

const powerUpMessages: string[] = [
  "–°—É–ø–µ—Ä –∫–æ–º–±–æ! üéØ",
  "–ù–µ–π–º–æ–≤—ñ—Ä–Ω–æ! ‚ö°",
  "–¢–∏ —Ä—É–ª–∏—à! üöÄ",
  "–ü—Ä–æ—Å—Ç–æ –≤–æ–≥–æ–Ω—å! üî•",
  "–ì–µ–Ω—ñ–∞–ª—å–Ω–æ! üß†"
];

function shuffleArray<T>(array: T[]): T[] {
  const newArray = [...array];
  for (let i = newArray.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
  }
  return newArray;
}

function App() {
  const [step, setStep] = useState<number>(-1);
  const [score, setScore] = useState<number>(0);
  const [ending, setEnding] = useState<EndingType>("");
  const [hero, setHero] = useState<Hero | null>(null);
  const [showExplanation, setShowExplanation] = useState<boolean>(false);
  const [playClick] = useSound(clickSfx);
  const [playWin] = useSound(winSfx);
  const [playFail] = useSound(failSfx);
  const [currentEffect, setCurrentEffect] = useState<ReactNode>(null);
  const [showConfetti, setShowConfetti] = useState<boolean>(false);
  const [powerUpMessage, setPowerUpMessage] = useState<string>("");
  const [combo, setCombo] = useState<number>(0);
  
  // Adding a new state to store shuffled options
  const [shuffledOptions, setShuffledOptions] = useState<string[][]>([]);

  useEffect(() => {
    document.title = "Frontend RPG Interview";
  }, []);

  // Update useEffect to initialize shuffled variants
  useEffect(() => {
    if (hero) {
      setShuffledOptions(hero.questions.map(q => shuffleArray(q.options)));
    }
  }, [hero]);

  const handleHeroPick = (choice: Hero) => {
    playClick();
    setHero(choice);
    setStep(0);
  };

  const handleAnswer = (index: number) => {
    playClick();
    if (hero && index === hero.questions[step].correct) {
      setScore(score + 1);
      setCurrentEffect(hero.questions[step].effect);
      setCombo(combo + 1);
      if (combo >= 2) {
        setShowConfetti(true);
        setTimeout(() => setShowConfetti(false), 3000);
        setPowerUpMessage(powerUpMessages[Math.floor(Math.random() * powerUpMessages.length)]);
        setTimeout(() => setPowerUpMessage(""), 2000);
      }
    } else {
      setCombo(0);
    }
    setShowExplanation(true);
  };

  const handleNextQuestion = () => {
    const nextStep = step + 1;
    setShowExplanation(false);
    setCurrentEffect(null);
    setPowerUpMessage("");
    
    if (hero && nextStep < hero.questions.length) {
      setStep(nextStep);
    } else {
      let final: EndingType;
      // if (hero && score + 1 === hero.questions.length) {
      if (hero && score === hero.questions.length) {
        final = 'good';
        playWin();
        setShowConfetti(true);
      } else if (score === 0) {
        final = 'bad';
        playFail();
      } else {
        final = 'neutral';
      }
      setEnding(final);
    }
  };

  const resetGame = () => {
    setStep(-1);
    setScore(0);
    setEnding("");
    setHero(null);
    setShowExplanation(false);
    setCurrentEffect(null);
    setShowConfetti(false);
    setPowerUpMessage("");
    setCombo(0);
  };

  if (step === -1) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-purple-50 to-blue-50 p-2 sm:p-6">
        <div className="max-w-xl mx-auto bg-white rounded-2xl shadow-xl p-4 sm:p-8">
          <h1 className="text-3xl font-bold text-center mb-8">üßô‚Äç‚ôÇÔ∏è Frontend RPG Interview</h1>
          <p className="text-gray-600 mb-8 text-center">–û–±–µ—Ä–∏ —Å–≤–æ–≥–æ –≥–µ—Ä–æ—è —Ç–∞ –ø—Ä–æ–π–¥–∏ —Å–ø—ñ–≤–±–µ—Å—ñ–¥—É!</p>
          <div className="grid gap-4">
            {heroes.map((h) => (
              <motion.button
                key={h.id}
                onClick={() => handleHeroPick(h)}
                className={`p-4 rounded-xl text-left flex items-center gap-4 transition-all
                  ${h.color === 'blue' ? 'bg-blue-50 hover:bg-blue-100' : 'bg-green-50 hover:bg-green-100'}`}
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
              >
                <div className={`p-3 rounded-lg ${h.color === 'blue' ? 'bg-blue-100' : 'bg-green-100'}`}>
                  {h.icon}
                </div>
                <div className="flex-1">
                  <h3 className="font-semibold text-lg">{h.name}</h3>
                  <p className="text-gray-600">{h.description}</p>
                </div>
                <div className="hidden sm:flex items-center gap-2">
                  {h.powerIcon}
                  <span className="text-sm text-gray-500">{h.powerName}</span>
                </div>
              </motion.button>
            ))}
          </div>
        </div>
      </div>
    );
  }

  if (ending) {
    return (
      <motion.div
        className={`min-h-screen bg-gradient-to-br ${hero?.background || ''} p-2 sm:p-6 flex items-center justify-center`}
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
      >
        {showConfetti && <Confetti />}
        <div className="bg-white rounded-2xl shadow-xl p-4 sm:p-8 max-w-xl w-full text-center">
          <div className="flex justify-center mb-6">
            {endings[ending].icon}
          </div>
          <h1 className="text-2xl font-bold mb-4">üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Å–ø—ñ–≤–±–µ—Å—ñ–¥–∏</h1>
          <p className="text-lg mb-4">–¢–≤—ñ–π –≥–µ—Ä–æ–π: {hero?.name}</p>
          <p className="text-lg mb-4">{endings[ending].text}</p>
          <p className="text-gray-600 mb-6">{endings[ending].description}</p>
          <p className="text-xl mb-6">–ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {score} –∑ {hero?.questions.length}</p>
          <motion.button
            onClick={resetGame}
            className="px-6 py-3 bg-purple-600 text-white rounded-xl hover:bg-purple-700 transition-colors"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
          </motion.button>
        </div>
      </motion.div>
    );
  }

  return (
    <AnimatePresence mode="wait">
      <motion.div
        key={step}
        className={`min-h-screen bg-gradient-to-br ${hero?.background || ''} p-2 sm:p-6`}
        initial={{ opacity: 0, y: 10 }}
        animate={{ opacity: 1, y: 0 }}
        exit={{ opacity: 0, y: -10 }}
        transition={{ duration: 0.3 }}
      >
        {showConfetti && <Confetti style={{ maxWidth: '100%' }}/>}
        <div className="max-w-xl mx-auto bg-white rounded-2xl shadow-xl p-4 sm:p-8">
          <div className="flex items-center justify-between mb-6">
            <div className="flex items-center gap-4">
              {/* <h1 className="text-2xl font-bold">–†—ñ–≤–µ–Ω—å {step + 1}</h1> */}
              <h1 className="text-2xl font-bold">–†—ñ–≤–µ–Ω—å {step + 1}/{shuffledOptions.length}</h1>
              {combo > 2 && (
                <div className="hidden sm:block px-3 py-1 bg-yellow-100 rounded-full text-sm font-medium text-yellow-800">
                  –ö–æ–º–±–æ x{combo} üî•
                </div>
              )}
            </div>
            <div className="flex items-center gap-2">
              <div className={`p-2 rounded-lg ${hero?.color === 'blue' ? 'bg-blue-100' : 'bg-green-100'}`}>
                {hero?.icon}
              </div>
              <span className="font-medium">{hero?.name}</span>
            </div>
          </div>
          
          {powerUpMessage && (
            <motion.div
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: 20 }}
              className="text-center text-xl font-bold text-purple-600 mb-4"
            >
              {powerUpMessage}
            </motion.div>
          )}
          
          <div className="mb-6">
            {hero && (
              <>
                <div className="flex items-center gap-2 mb-4">
                  <p className="text-lg font-medium">{hero.questions[step].question}</p>
                  {currentEffect && <div className="ml-2">{currentEffect}</div>}
                </div>
                <div className="space-y-3">
                  {shuffledOptions[step]?.map((opt, idx) => {
                    // We find the original index of the correct answer
                    const originalIndex = hero.questions[step].options.indexOf(opt);
                    const isCorrect = originalIndex === hero.questions[step].correct;
                    
                    return (
                      <motion.button
                        key={idx}
                        className={`w-full p-4 rounded-xl text-left transition-all
                          ${showExplanation 
                            ? isCorrect
                              ? 'bg-green-100' 
                              : 'bg-red-50'
                            : 'bg-gray-50 hover:bg-gray-100'
                          }
                          ${showExplanation && 'cursor-default'}`}
                        onClick={() => !showExplanation && handleAnswer(originalIndex)}
                        disabled={showExplanation}
                        whileHover={!showExplanation ? { scale: 1.01 } : {}}
                        whileTap={!showExplanation ? { scale: 0.99 } : {}}
                      >
                        {opt}
                      </motion.button>
                    );
                  })}
                </div>
              </>
            )}
          </div>

          {showExplanation && hero && (
            <motion.div
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              className="mb-6 p-4 bg-blue-50 rounded-xl"
            >
              <h3 className="font-semibold mb-2 flex items-center gap-2">
                <Lightbulb className="w-5 h-5 text-yellow-500" />
                –ü–æ—è—Å–Ω–µ–Ω–Ω—è:
              </h3>
              <p className="text-gray-600">{hero.questions[step].explanation}</p>
            </motion.div>
          )}

          {showExplanation && hero && (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              className="flex justify-end"
            >
              <motion.button
                onClick={handleNextQuestion}
                className="px-6 py-3 bg-purple-600 text-white rounded-xl hover:bg-purple-700 transition-colors"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                {step + 1 === hero.questions.length ? "–ó–∞–≤–µ—Ä—à–∏—Ç–∏" : "–ù–∞—Å—Ç—É–ø–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è"}
              </motion.button>
            </motion.div>
          )}
        </div>
      </motion.div>
    </AnimatePresence>
  );
}

export default App;